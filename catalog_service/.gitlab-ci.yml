image: golang:1.19.5

variables:
  MY_TRIGGER_TOKEN: $MY_TRIGGER_TOKEN

stages:
  - build
  - test
  - deploy

.only-base: &only-base
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" || ($CI_PIPELINE_SOURCE == 'merge_request_event' && ( $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" ))

.only-production: &only-production
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"

verify_dependencies:
  <<: *only-base
  stage: build
  script:
    - go mod verify

build_main:
  <<: *only-base
  stage: build
  needs:
    - verify_dependencies
  script:
    - go build ./cmd/Main.go 

vet:
  <<: *only-base
  stage: build
  needs:
    - build_main
  script:
    - go vet ./...

test_all:
  <<: *only-base
  stage: test
  needs:
    - vet
  script:
    - go test -race -vet=off ./...

publish:
  <<: *only-production
  stage: deploy
  needs:
    - test_all
  script:
    - echo "Build and push image to Amazon ECR"
  environment: production

deploy:
  <<: *only-production
  stage: deploy
  needs:
    - publish
  script:
    - 'curl -X POST --fail -F token=$MY_TRIGGER_TOKEN -F ref=master "https://gitlab.com/api/v4/projects/43580268/trigger/pipeline"'
  environment: production
