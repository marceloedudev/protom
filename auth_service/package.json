{
    "name": "auth_service",
    "version": "1.0.0",
    "description": "",
    "main": "index.js",
    "private": "true",
    "scripts": {
        "dev": "npx cross-env NODE_ENV=development npx ts-node-dev --files -r tsconfig-paths/register --poll --respawn --exit-child ./src/AuthApplication.ts",
        "eslint": "npx eslint",
        "lint": "npx eslint .",
        "lint:fix": "npx eslint ./src --fix",
        "start": "npx cross-env NODE_ENV=production npx ts-node --project ./tsconfig.json -r tsconfig-paths/register ./src/index.ts",
        "test:cli": "npx mocha --require mocha-suppress-logs -r ts-node/register -r tsconfig-paths/register --timeout 100000 --bail --exit --colors --extension ts",
        "test:cli2": "npx mocha --require mocha-suppress-logs -r ts-node/register -r tsconfig-paths/register --timeout 100000 --bail --exit --colors --extension ts",
        "typeorm": "npx ts-node --project ./tsconfig.json -r tsconfig-paths/register node_modules/typeorm/cli.js",
        "test:unit": "npx cross-env NODE_ENV=test npm run test:cli -- ./test/unit/**/*.test.ts",
        "test:integration": "npx cross-env NODE_ENV=test npm run test:cli -- ./test/integration/**/*.test.ts",
        "test:e2e": "npx cross-env NODE_ENV=test npm run test:cli -- ./test/e2e/**/*.test.ts",
        "test:stress": "npx cross-env NODE_ENV=test npx ts-node --project ./tsconfig.json -r tsconfig-paths/register ./test/stress/start.ts",
        "test:dockerfile:dev": "docker run --rm -i hadolint/hadolint hadolint --ignore DL3018 - < ./Dockerfile.dev",
        "test:dockerfile:prod": "docker run --rm -i hadolint/hadolint < Dockerfile",
        "test:benchmark": "npx ts-node --project ./tsconfig.json -r tsconfig-paths/register ./test/benchmark/index.ts",
        "typeorm:create-migration:dev": "npm run typeorm -- migration:create ./src/data/migration/$npm_config_name",
        "typeorm:generate-migration:dev": "npx cross-env NODE_ENV=development npm run typeorm -- migration:generate ./src/data/migration/$npm_config_name -d ./src/packages/database/postgres/connection/database/AppDataSource.ts",
        "typeorm:run-migration": "npm run typeorm -- migration:run -d ./src/packages/database/postgres/connection/database/AppDataSource.ts",
        "typeorm:run-migration:dev": "npx cross-env NODE_ENV=development npm run typeorm:run-migration",
        "typeorm:run-migration:prod": "npx cross-env NODE_ENV=production npm run typeorm:run-migration",
        "seed:postgres:run": "npx ts-node --project ./tsconfig.json -r tsconfig-paths/register ./node_modules/typeorm-extension/dist/cli/index.js seed -r ./src/packages/database/postgres/connection/database -d AppDataSource",
        "seed:postgres:run:dev": "npx cross-env NODE_ENV=development npm run seed:postgres:run",
        "seed:postgres:run:prod": "npx cross-env NODE_ENV=production npm run seed:postgres:run",
        "seed:mongodb:run": "npx ts-node --project ./tsconfig.json -r tsconfig-paths/register ./src/data/mongodb/seeding/seeds/MainSeederMongoDB.ts",
        "seed:mongodb:run:dev": "npx cross-env NODE_ENV=development npm run seed:mongodb:run",
        "seed:mongodb:run:prod": "npx cross-env NODE_ENV=production npm run seed:mongodb:run",
        "doc:asyncapi:generator:html": "npx ag ./src/docs/asyncapi/asyncapi.yml @asyncapi/html-template -o ./asyncapi/html",
        "doc:asyncapi:generator:markdown": "npx ag ./src/docs/asyncapi/asyncapi.yml @asyncapi/markdown-template -o ./asyncapi/markdown",
        "check": "npx npm-check"
    },
    "keywords": [],
    "author": "",
    "license": "ISC",
    "devDependencies": {
        "@asyncapi/generator": "^1.9.12",
        "@babel/eslint-parser": "^7.19.1",
        "@faker-js/faker": "^7.6.0",
        "@types/amqplib": "^0.8.2",
        "@types/chai": "^4.3.3",
        "@types/express": "^4.17.13",
        "@types/mocha": "^10.0.0",
        "@types/morgan": "^1.9.3",
        "@types/node": "^18.8.5",
        "@types/sinon": "^10.0.13",
        "@types/supertest": "^2.0.12",
        "@typescript-eslint/eslint-plugin": "^5.29.0",
        "@typescript-eslint/parser": "^5.29.0",
        "autocannon": "^7.10.0",
        "autocannon-reporter": "^1.1.0",
        "benchmark": "^2.1.4",
        "chai": "^4.3.6",
        "cross-env": "^7.0.3",
        "eslint": "^7.32.0 || ^8.2.0",
        "eslint-config-airbnb-base": "^15.0.0",
        "eslint-config-prettier": "^8.5.0",
        "eslint-import-resolver-typescript": "^3.5.1",
        "eslint-plugin-import": "^2.25.2",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-security-node": "^1.1.1",
        "mocha": "^10.0.0",
        "mocha-suppress-logs": "^0.3.1",
        "npm-check": "^6.0.1",
        "nyc": "^15.1.0",
        "prettier": "^2.7.1",
        "sinon": "^14.0.1",
        "supertest": "^6.3.0",
        "ts-node": "10.9.1",
        "ts-node-dev": "^2.0.0",
        "tsconfig-paths": "^4.1.0",
        "typeorm-extension": "^2.1.15",
        "typescript": "4.8.4"
    },
    "dependencies": {
        "amqplib": "^0.10.3",
        "bcryptjs": "^2.4.3",
        "cors": "^2.8.5",
        "dotenv": "^16.0.1",
        "express": "^4.18.2",
        "express-async-errors": "^3.1.1",
        "fast-glob": "^3.2.12",
        "helmet": "^6.0.0",
        "mongodb-memory-server": "^8.9.3",
        "mongoose": "^6.6.5",
        "morgan": "^1.10.0",
        "pg": "^8.8.0",
        "redis": "^4.1.0",
        "redis-memory-server": "^0.6.0",
        "reflect-metadata": "^0.1.13",
        "rollbar": "^2.25.2",
        "safe-regex": "^2.1.1",
        "speakeasy": "^2.0.0",
        "sqlite3": "^5.1.2",
        "swagger-ui-express": "^4.5.0",
        "typeorm": "0.3.10"
    },
    "nyc": {
        "extension": [
            ".ts"
        ],
        "include": [
            "**/*.ts"
        ],
        "exclude": [
            "**/*.d.ts"
        ],
        "reporter": [
            "html"
        ],
        "all": true,
        "branches": 80,
        "lines": 80,
        "functions": 80,
        "statements": 80
    }
}